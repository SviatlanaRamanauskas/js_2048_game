{"version":3,"sources":["scripts/main.js"],"names":["field","rows","columns","score","page","document","querySelector","startButton","getElementById","gameStarted","clearGame","innerText","Array","fill","map","r","c","updateCell","toString","setGame","innerHTML","cell","createElement","id","append","setTwo","num","classList","value","add","messageWin","filterZero","row","filter","move","filteredRow","ind","length","push","moveLeft","moveRight","reverse","moveUp","moveDown","messageGameOver","remove","hasEmptyCell","found","Math","random","floor","addEventListener","contains","element","code"],"mappings":"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","file":"main.3499298c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nlet field;\nconst page = document.querySelector('.container');\nconst startButton = document.getElementById('start');\nlet gameStarted = false;\n\nstartButton.addEventListener('click', function() {\n  if (startButton.classList.contains('start')) {\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.innerText = 'Restart';\n\n    if (!gameStarted) {\n      const messageStart = page.querySelector('.message-start');\n\n      messageStart.classList.add('hidden');\n      gameStarted = true;\n      setGame();\n    }\n  } else if (startButton.classList.contains('restart')) {\n    clearGame();\n    startButton.innerText = 'Restart';\n\n    const messageLose = page.querySelector('.message-lose');\n\n    messageLose.classList.add('hidden');\n    gameStarted = true;\n    setGame();\n  }\n});\n\nfunction clearGame() {\n  startButton.innerText = 'Start';\n  score = 0;\n  document.getElementById('score').innerText = score;\n\n  field = new Array(rows).fill(0).map(() => new Array(columns).fill(0));\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      updateCell(cell, 0);\n    }\n  }\n}\n\nfunction setGame() {\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  const fieldContainer = document.getElementById('field');\n\n  fieldContainer.innerHTML = '';\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.createElement('div');\n\n      cell.id = r.toString() + '-' + c.toString();\n\n      const num = field[r][c];\n\n      updateCell(cell, num);\n      document.getElementById('field').append(cell);\n    }\n  }\n  setTwo();\n  setTwo();\n}\n\nfunction updateCell(cell, num) {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (num > 0) {\n    cell.innerText = num.toString();\n\n    if (num <= 2048) {\n      cell.classList.add('field-cell--' + num.toString());\n\n      if (num === 2048) {\n        messageWin();\n      }\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (element) => {\n  switch (element.code) {\n    case 'ArrowLeft':\n      moveLeft();\n      setTwo();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      setTwo();\n      break;\n    case 'ArrowUp':\n      moveUp();\n      setTwo();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      setTwo();\n      break;\n  }\n\n  document.getElementById('score').innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction move(row) {\n  let filteredRow = filterZero(row);\n\n  for (let ind = 0; ind < filteredRow.length - 1; ind++) {\n    if (filteredRow[ind] === filteredRow[ind + 1]) {\n      filteredRow[ind] *= 2;\n      filteredRow[ind + 1] = 0;\n      score += filteredRow[ind];\n    }\n  }\n\n  filteredRow = filterZero(filteredRow);\n\n  while (filteredRow.length < columns) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n\nfunction moveLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = field[r];\n\n    row = move(row);\n    field[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = field[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction moveRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = field[r];\n\n    row.reverse();\n    row = move(row);\n    field[r] = row.reverse();\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = field[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [field[0][c], field[1][c], field[2][c], field[3][c]];\n\n    row = move(row);\n\n    for (let r = 0; r < rows; r++) {\n      field[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = field[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [field[0][c], field[1][c], field[2][c], field[3][c]];\n\n    row.reverse();\n    row = move(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      field[r][c] = row[r];\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n      const num = field[r][c];\n\n      updateCell(cell, num);\n    }\n  }\n}\n\nfunction messageGameOver() {\n  const messageLose = page.querySelector('.message-lose');\n\n  messageLose.classList.remove('hidden');\n}\n\nfunction messageWin() {\n  const winningMessage = page.querySelector('.message-win');\n\n  winningMessage.classList.remove('hidden');\n}\n\nfunction setTwo() {\n  if (!hasEmptyCell()) {\n    return messageGameOver();\n  }\n\n  let found = false;\n\n  const value = Math.random() < 0.9 ? 2 : 4;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (field[r][c] === 0) {\n      field[r][c] = value;\n\n      const cell = document.getElementById(r.toString() + '-' + c.toString());\n\n      cell.innerText = value.toString();\n      cell.classList.add('field-cell--' + value);\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyCell() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (field[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}